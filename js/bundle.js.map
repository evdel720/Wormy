{"version":3,"sources":["webpack/bootstrap edf20b0bd45541397527","./js/main.js","./js/snake_view.js","./js/snake.js","./js/coord.js","./js/board.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;;;;;;ACND;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;;;;;;;AC3BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA,mBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap edf20b0bd45541397527\n **/","const View = require('./snake_view');\nconst Board = require('./board');\n\n$( () => {\n  const board = new Board();\n  const view = new View(board, $('.snake'));\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.js\n ** module id = 0\n ** module chunks = 0\n **/","function SnakeView(board, $el){\n  this.board = board;\n  this.$el = $el;\n  \n  $('body').on(\"keydown\", (event) => {\n    this.handleKeyEvent(event.keyCode);\n  });\n}\n\n//left 37, up 38, right 39, down 40\n\nSnakeView.prototype.handleKeyEvent = function(keyCode) {\n  switch(keyCode) {\n    case 37:\n      this.board.snake.turn(\"W\");\n      break;\n    case 38:\n      this.board.snake.turn(\"N\");\n      break;\n    case 39:\n      this.board.snake.turn(\"E\");\n      break;\n    case 40:\n      this.board.snake.turn(\"S\");\n      break;\n  }\n};\n\nmodule.exports = SnakeView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake_view.js\n ** module id = 1\n ** module chunks = 0\n **/","const Coord = require('./coord');\n\nfunction Snake() {\n  this.directions = [\"N\", \"E\", \"S\", \"W\"];\n  this.currentDirection = this.directions[0];\n  this.head = [5,5];\n  this.coord = new Coord();\n  this.segments = [this.head];\n  this.snakeLength = 1;\n}\n\nSnake.prototype.move = function(){\n  // this.segments.forEach((segment) => {\n  //   segment.plus(this.directions.indexOf(this.currentDirection));\n  // });\n  let cardIdx = this.directions.indexOf(this.currentDirection);\n  let newPos = this.coord.plus(this.head, cardIdx);\n  this.segments.shift(newPos);\n  this.segments = this.segments.slice(0, this.snakeLength);\n  this.head = newPos;\n};\n\nSnake.prototype.turn = function(newDirection){\n  console.log(newDirection);\n  this.currentDirection = newDirection;\n};\n\n\nmodule.exports = Snake;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/snake.js\n ** module id = 2\n ** module chunks = 0\n **/","\nfunction Coord() {\n  this.CARDINALS = [[0,-1],[1,0],[0,1],[-1,0]];\n}\n\nCoord.prototype.plus = function(pos, cardIdx) {\n  pos[0] += this.CARDINALS[cardIdx][0];\n  pos[1] += this.CARDINALS[cardIdx][1];\n  return pos;\n};\n\nCoord.prototype.equals = function(pos1, pos2){\n  return (pos1[0] === pos2[0] && pos1[1] === pos2[1]);\n};\n\nCoord.prototype.isOpposite = function(cardIdx, currentKey){\n  // if(){\n  //\n  // }\n  // else{\n  //\n  // }\n};\n\nmodule.exports = Coord;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/coord.js\n ** module id = 3\n ** module chunks = 0\n **/","const Snake = require('./snake.js');\n\nfunction Board(){\n  this.grid = this.makeGrid();\n  this.snake = new Snake();\n}\n\nBoard.prototype.makeGrid = function(){\n  let grid = [];\n  for(let i = 0; i < 20; i++){\n    let row = [];\n    for(let j = 0; j < 20; j++){\n      row.push(undefined);\n    }\n    grid.push(row);\n  }\n  return grid;\n};\n\nmodule.exports = Board;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/board.js\n ** module id = 4\n ** module chunks = 0\n **/"],"sourceRoot":""}